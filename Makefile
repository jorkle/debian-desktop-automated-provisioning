
.PHONY: help

# Shell that make should use
# Make changes to path persistent
# https://stackoverflow.com/a/13468229/13577666
SHELL := /bin/bash
PATH := $(PATH)

# Ubuntu distro string
OS_VERSION_NAME := $(shell lsb_release -cs)

HOSTNAME = $(shell hostname)

# This next section is needed to ensure $$HOME is on PATH in the initial shell session
# The file from bash scripts/before_script_path_fix.sh
# is only loaded in a new shell session.
LOCAL_BIN = $(shell echo $$HOME/.local/bin)
# $(warning LOCAL_BIN is $(LOCAL_BIN))

# Source for conditional: https://stackoverflow.com/a/2741747/13577666
ifneq (,$(findstring $(LOCAL_BIN),$(PATH)))
	# Found: all set; do nothing, $(LOCAL_BIN) is on PATH
	PATH := $(PATH);
else
	# Not found: adding $(LOCAL_BIN) to PATH for this shell session
export PATH := $(LOCAL_BIN):$(PATH); @echo $(PATH)
endif

# "users" format is from https://github.com/icancclearynow/ansible-role-zsh
VARIABLES = '{"users": [{"username": "$(shell whoami)"}], "ansible_user": "$(shell whoami)", "docker_users": ["$(shell whoami)"]}'

# Main Ansible Playbook Command (prompts for password)
PLAYBOOK_TERMINAL=playbook_terminal.yml
PLAYBOOK_DESKTOP=playbook_desktop.yml
ANSIBLE_PLAYBOOK_TERMINAL = ansible-playbook $(PLAYBOOK_TERMINAL) -v -e $(VARIABLES)
ANSIBLE_PLAYBOOK_DESKTOP = ansible-playbook $(PLAYBOOK_DESKTOP) -v -e $(VARIABLES)

$(warning ANSIBLE_PLAYBOOK_TERMINAL is $(ANSIBLE_PLAYBOOK_TERMINAL))
$(warning ANSIBLE_PLAYBOOK_DESKTOP is $(ANSIBLE_PLAYBOOK_DESKTOP))

help:
# http://marmelab.com/blog/2016/02/29/auto-documented-makefile.html
# adds anything that has a double # comment to the phony help list
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ".:*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.DEFAULT_GOAL := help

bootstrap-before-install:
bootstrap-before-install:
	# Apt Dependencies (removes apt ansible)
	bash scripts/before_install_apt_dependencies.sh

bootstrap-install:
bootstrap-install:
	# Python3 Dependencies (install python3 ansible)
	bash scripts/install_python3_dependencies.sh

bootstrap-before-script:
bootstrap-before-script:
	# Ensure "$$HOME/.local/bin" is part of PATH on future shell sessions
	# The top of the Makefile takes care of this in the initial session
	bash scripts/before_script_path_fix.sh

galaxy-requirements:
galaxy-requirements:
	ansible-galaxy install -r requirements.yml

bootstrap: bootstrap-before-install bootstrap-install bootstrap-before-script galaxy-requirements
bootstrap: ## Installs dependencies needed to run playbook

bootstrap-check:
bootstrap-check: ## Check that PATH and requirements are correct
	@ansible --version | grep "python version"

desktop: DARGS?=
desktop: ## Installs everything from terminal playbook
	@$(ANSIBLE_PLAYBOOK_DESKTOP)


all: ## Does most eveything with Ansible and Make targets
all: bootstrap bootstrap-check install non-ansible

lint:  ## Lint the repo
lint:
	pre-commit run --all-files

dotfiles:  ## Initialize dotfiles
dotfiles:
	git clone https://github.com/jorkle/dotfiles
######################## Below is autogenerated  ##########################
# Run python3 scripts/makefile_targets_from_ansible_tags.py, copy Makefile.template below
###########################################################################

colorls:
colorls: ## Runs the colorls ansible role
	@$(ANSIBLE_PLAYBOOK_TERMINAL) --tags="colorls" --ask-become-pass

zsh:
zsh: ## Runs the zsh ansible role
	@$(ANSIBLE_PLAYBOOK_TERMINAL) --tags="zsh" --ask-become-pass

appimagelauncher:
appimagelauncher: ## Runs the appimagelauncher ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="appimagelauncher" --ask-become-pass

code-extensions:
code-extensions: ## Runs the code-extensions ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="code-extensions" --ask-become-pass

extra-desktop-packages:
extra-desktop-packages: ## Runs the extra-desktop-packages ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="extra-desktop-packages" --ask-become-pass

extra-packages:
extra-packages: ## Runs the extra-packages ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="extra-packages" --ask-become-pass

flatpak:
flatpak: ## Runs the flatpak ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="flatpak" --ask-become-pass

nextcloud:
nextcloud: ## Runs the nextcloud ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="nextcloud" --ask-become-pass

debian-apt-repositories:
debian-apt-repositories: ## Runs the universe-repository ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="debian-apt-repositories" --ask-become-pass

spotify:
spotify: ## Runs the install spotify ansible role
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="spotify" --ask-become-pass

dotfiles:
dotfiles: ## Install dotfiles from GitHub repository
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="dotfiles" --ask-become-pass

xorg:
xorg: ## Configure Xorg
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="xorg" --ask-become-pass

lightdm:
lightdm: ## Configure Xorg
	@$(ANSIBLE_PLAYBOOK_DESKTOP) --tags="lightdm" --ask-become-pass
